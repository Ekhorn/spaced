x-vars:
  - &docker-sock --docker=unix:///var/run/user/${UID:-1000}/docker.sock

configs:
  frontend: { external: true }
  prometheus: { external: true }

services:
  # Reverse-proxy for Spaced services
  traefik:
    image: traefik:v3.2
    labels:
      - traefik.http.routers.dashboard.rule=Host(`traefik.localhost`)
      - traefik.http.services.dashboard.loadbalancer.server.port=8080
    deploy:
      placement:
        constraints:
          - node.role == manager
    volumes:
      - /var/run/user/${UID:-1000}/docker.sock:/var/run/docker.sock
    command:
      - --providers.docker
      - --providers.docker.exposedbydefault=false
      - --entryPoints.websecure.address=:443
      # - --certificatesresolvers.myresolver.acme.tlschallenge=true
      # - --certificatesresolvers.myresolver.acme.email=
      # - --certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json
      - --entrypoints.web.address=:80
      - --entrypoints.web.http.redirections.entrypoint.to=websecure
      - --entrypoints.web.http.redirections.entrypoint.scheme=https
  # Static file server
  nginx:
    image: nginx:alpine
    labels:
      - traefik.enable=true
      - traefik.http.routers.nginx.rule=Host(`localhost`)
    volumes:
      - ./config/nginx/static.conf:/etc/nginx/nginx.conf
      - ./dist:/usr/share/nginx/html
  # Spaced services
  item_socket:
    image: ${REGISTRY:-ghcr.io}/ekhorn/spaced/item_socket:${COMMIT_SHA:-latest}
    environment:
      - HOST=0.0.0.0
    ports: [8081:8081]
  # Metrics
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.49.1
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /sys/fs/cgroup:/sys/fs/cgroup:ro # Required for Podman subcontainers
      - /var/lib/docker/:/var/lib/docker:ro # Docker Root
      # - .local/share/docker/:/var/lib/docker:ro # Docker Rootless
      - /var/lib/containers:/var/lib/containers:ro # Podman Root
      # - share/containers:/var/lib/containers:ro # Podman Rootless
      - /dev/disk/:/dev/disk:ro
    command:
      - *docker-sock
      - --docker_only=true
    ports:
      - 8080:8080
    depends_on:
      - item_socket
  prometheus:
    image: prom/prometheus
    ports:
      - 9090:9090
    command:
      - --config.file=/etc/prometheus/prometheus.yml
    volumes:
      - ./config/prometheus.yaml:/etc/prometheus/prometheus.yml:ro
    depends_on:
      - cadvisor
