version: '3.8'

# Available tags: latest, nonroot, debug, debug-nonroot
# For more, see https://github.com/GoogleContainerTools/distroless#how-do-i-use-distroless-images
x-distroless-tag: &x-distroless-tag DISTROLESS_TAG=${DISTROLESS_TAG:-nonroot}

services:
  # A persistent database for local development.
  # postgres-dev:
  #   image: postgres:17
  #   restart: always
  #   environment:
  #     POSTGRES_DB: spaced
  #     POSTGRES_USER: admin
  #     POSTGRES_PASSWORD: password
  #   ports: ['5432:5432']
  # rabbitmq:
  #   image: rabbitmq
  #   restart: always
  #   environment:
  #     RABBITMQ_DEFAULT_USER: admin
  #     RABBITMQ_DEFAULT_PASS: password
  #   ports:
  #     - 5672:5672
  #     - 15672:15672
  ###################################
  ###           OPTIONAL          ###
  ###################################
  # Reverse-proxy for when running spaced services
  nginx:
    image: nginx
    restart: always
    profiles: ['e2e', 'nginx', 'services']
    volumes:
      - ./config/nginx/dev.conf:/etc/nginx/nginx.conf
      - ./dist:/usr/share/nginx/html
    ports:
      - 7777:80
      - 8888:81
  nginx_exporter:
    restart: always
    profiles: ['nginx', 'services']
    image: nginx/nginx-prometheus-exporter:1.3.0
    ports:
      - 9113:9113
    command: --nginx.scrape-uri=http://nginx:8888/stub_status
    depends_on:
      - nginx
  # Spaced services
  item_socket:
    image: spaced/item_socket:${IMAGE_TAG:-latest}
    restart: always
    profiles: ['e2e', 'services']
    environment:
      - HOST=0.0.0.0
      - PORT=8081
    build:
      dockerfile: srcs/services/item_socket/Dockerfile
      args: [*x-distroless-tag]
    ports: ['8081:8081']
  # Metrics
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.49.1
    restart: always
    profiles: ['services']
    privileged: true
    ports:
      - '8080:8080'
    devices:
      - '/dev/kmsg'
    volumes:
      - /:/rootfs:ro
      - /var/run/podman:/var/run/podman
      - /sys:/sys:ro
      # - '/var/lib/containers:/var/lib/containers:ro' # Root containers
      - ~/.local/share/containers:/var/lib/containers:ro
      - /dev/disk/:/dev/disk:ro
    command: >
      --podman="unix:///var/run/podman/podman.sock"
      --docker="unix://"
      --housekeeping_interval=10s
      --docker_only=true
    depends_on:
      - item_socket
  prometheus:
    image: prom/prometheus
    ports:
      - 9090:9090
    command:
      - --config.file=/etc/prometheus/prometheus.yml
    volumes:
      - ./config/prometheus.yaml:/etc/prometheus/prometheus.yml:ro
    depends_on:
      - cadvisor

  # item_producer:
  #   image: spaced/item_producer:${IMAGE_TAG:-latest}
  #   restart: always
  #   profiles: ['services']
  #   depends_on: [postgres-dev, rabbitmq]
  #   environment:
  #     - DATABASE_HOST=postgres://admin:password@postgres-dev/spaced
  #     - AMQP_HOST=rabbitmq
  #     - HOST=0.0.0.0
  #   build:
  #     dockerfile: srcs/services/item_producer/Dockerfile
  #     args: [*x-distroless-tag]
  #   ports: ['8080:8080']
  # user_service:
  # image: spaced/user_service:${IMAGE_TAG:-latest}
  # restart: always
  # profiles: ['services']
  # depends_on: [postgres-dev]
  # environment:
  #   - DATABASE_HOST=postgres://admin:password@postgres-dev/spaced
  #   - HOST=0.0.0.0
  #   - JWT_SECRET=test
  # build:
  #   dockerfile: srcs/services/user_service/Dockerfile
  #   args: [*x-distroless-tag]
  # ports: ['8081:8081']
